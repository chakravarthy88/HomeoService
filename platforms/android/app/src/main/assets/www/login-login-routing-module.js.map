{"version":3,"sources":["./src/app/login/login.page.ts","./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.page.scss"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAkD;AACT;AACgC;IAO5D,SAAS,SAAT,SAAS;IAEpB,YACS,WAAkC,EAClC,MAAc;QADd,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;IACnB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,KAAK,CAAC,KAAK,EAAE,QAAQ;QACnB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC;aACjD,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,IAAG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE;gBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;iBAAM;gBACL,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC;gBACrC,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;QAC7B,CAAC,CAAC;IACN,CAAC;CAEF;;YA/BQ,oFAAqB;YADrB,sDAAM;;AAQF,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,6EAAgC;;KAEjC,CAAC;GACW,SAAS,CAwBrB;AAxBqB;;;;;;;;;;;;;ACTtB;AAAe,6lCAA8hC,E;;;;;;;;;;;;;;;;;;;ACApgC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;AChBnC;AAAe,6GAA8C,mHAAmH,E","file":"login-login-routing-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AuthenticationService } from \"../shared/authentication-service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(\n    public authService: AuthenticationService,\n    public router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logIn(email, password) {\n    this.authService.SignIn(email.value, password.value)\n      .then((res) => {\n        if(this.authService.isEmailVerified) {\n          this.router.navigate(['']);          \n        } else {\n          window.alert('Email is not verified')\n          return false;\n        }\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Sign in User</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form>    \\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" #email required></ion-input>\\n    </ion-item> \\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" #password required></ion-input>\\n    </ion-item>\\n\\n    <ion-row>\\n      <ion-col> \\n      <ion-button type=\\\"submit\\\" (click)=\\\"logIn(email, password)\\\" expand=\\\"block\\\">Login</ion-button>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col> \\n        <ion-button \\n         type=\\\"submit\\\" \\n         color=\\\"danger\\\"\\n         (click)=\\\"authService.GoogleAuth()\\\" \\n         expand=\\\"block\\\">\\n           Login with Google\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MifQ== */\";"],"sourceRoot":"webpack:///"}